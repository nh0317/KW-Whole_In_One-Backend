<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.naturemobility.seoul.mapper.CalculateManagementMapper">

    <select id="getStoreIdx" resultType="Long">
        SELECT storeIdx
        From Partner
        WHERE partnerIdx = #{partnerIdx}
    </select>

    <select id="getCalculateList" resultType="GetCalculationListRes">
        SELECT partnerPaymentIdx,
               sales,
               price,
               fees,
               (CASE calculateStatus
                    WHEN 0 THEN '정산 미완료'
                    WHEN 1 THEN '정산 완료'
                   END) AS calculateStatus
                ,
               calculateDate,
               createdAt,
               calculatedAt
        FROM PartnerPayment
        WHERE partnerIdx = #{partnerIdx}
        ORDER BY createdAt DESC;
    </select>

    <select id="getCalculateListWithFilter" resultType="GetCalculationListRes">
        SELECT partnerPaymentIdx,
               sales,
               price,
               fees,
               (CASE calculateStatus
                    WHEN 0 THEN '정산 미완료'
                    WHEN 1 THEN '정산 완료'
                   END) AS calculateStatus
                ,
               calculateDate,
               createdAt,
               calculatedAt
        FROM PartnerPayment
        WHERE partnerIdx = #{partnerIdx}
          AND createdAt >= #{startDate}
          AND createdAt &lt;= #{endDate}
          AND calculateStatus = #{calculationStatus}
        ORDER BY createdAt DESC;
    </select>

    <select id="getStoreIdxByCalculationIdx" resultType="Long">
        SELECT storeIdx
        FROM Reservations
        WHERE reservationIdx = #{calculationIdx}
    </select>

    <update id="changeCalculateStatus">
        UPDATE Reservations
        SET calculateStatus = 2
        WHERE reservationIdx = #{calculationIdx}
    </update>

    <select id="getCalculatedAmount" resultType="Integer">
        SELECT SUM(IF(DATE_FORMAT(createdAt, '%Y-%m') = DATE_FORMAT(createdAt, #{getCheckMonthRes}), amount,
                      0)) AS fee
        FROM Payment
        WHERE storeIdx = #{storeIdx};
    </select>

    <insert id="postCalculation" parameterType="PostCalculation">
        INSERT INTO PartnerPayment (partnerIdx, sales, fees, price, calculateDate)
        VALUES (#{partnerIdx}, #{sales}, #{fee}, #{price}, #{getCheckMonthRes});
    </insert>

    <select id="checkDuplication" resultType="Integer">
        SELECT COUNT(1)
        FROM PartnerPayment
        WHERE partnerIdx = #{partnerIdx}
          AND calculateDate = #{getCheckMonthRes}
    </select>

    <select id="getCanceledAmount" resultType="Integer">
        SELECT SUM(IF(DATE_FORMAT(createdAt, '%Y-%m') = DATE_FORMAT(createdAt, #{getCheckMonthRes}), cancelAmount,
                      0)) AS cancelAmount
        FROM Payment
        WHERE storeIdx = #{storeIdx};
    </select>

    <select id="getCheckMonth" resultType="String">
        SELECT DATE_FORMAT(date_add(now(), INTERVAL -1 MONTH), '%Y-%m')AS month
    </select>

</mapper>