<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.naturemobility.seoul.mapper.VisitedMapper">
    <insert id="save" useGeneratedKeys="true" keyProperty="visitedIdx" parameterType="VisitedInfo">
        INSERT INTO Visited(storeIdx,userIdx)
        VALUES(#{storeIdx}, #{userIdx})
    </insert>

    <update id="update" parameterType="VisitedInfo">
        UPDATE Visited
        SET
            updatedAt = NOW()
        WHERE userIdx =#{userIdx} and storeIdx=#{storeIdx}
    </update>

    <select id="findAllByUserIdx" parameterType="VisitedInfo" resultType="GetVisitedByUserIdx">
        select s.storeIdx,s.storeName, s.storeImage, b.brandName AS storeType,  s.reserveStatus, s.couponStatus,
               (SELECT IFNULL(format(ROUND(SUM(reviewScore) / COUNT(reviewIdx), 1),1), 0)
                FROM Reviews r
                WHERE r.storeIdx = s.storeIdx)                              AS reviewStar
        FROM Visited v left join Stores s on v.storeIdx = s.storeIdx left join StoreBrand b on s.storeBrand = b.brandIdx
        WHERE v.userIdx=#{userIdx}
        Order By v.updatedAt DESC
        LIMIT #{pageInfo.firstIndex}, #{recordsPerPage}
    </select>

    <select id="cntTotalVisited" resultType="Integer">
        select count(*)
        FROM Visited
        WHERE userIdx=#{userIdx}
    </select>

    <select id="findByStoreIdxAndUserIdx" resultType="VisitedInfo">
        select *
        FROM Visited
        WHERE userIdx=#{userIdx} and storeIdx=#{storeIdx}
    </select>

    <delete id="delete" parameterType="VisitedInfo">
        DELETE FROM Visited
        WHERE visitedIdx=#{visitedIdx}
    </delete>

</mapper>
