<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.naturemobility.seoul.mapper.PaymentMapper">
    <insert id="savePayment" parameterType="PaymentInfo">
        INSERT INTO Payment(merchantUid, userIdx, storeIdx,couponIdx, payMethod, userPaymentIdx, impUid ,amount,name,point,refundStatus,modiBy,modiRole)
        VALUES(#{merchantUid},#{userIdx},#{storeIdx},#{couponIdx},#{payMethod},#{userPaymentIdx},#{impUid},#{amount},#{name},#{point},#{refundStatus},#{modiBy},#{modiRole})
        ON DUPLICATE KEY UPDATE
            refundStatus=#{refundStatus},
            modiBy=#{modiBy},
             modiRole=#{modiRole}
    </insert>
    <select id="findPayment" resultType="PaymentInfo">
        SELECT *
        FROM Payment
        WHERE merchantUid = #{merchantUid}
    </select>
    <update id="updateRefundInfo">
        UPDATE Payment
        SET
            refundReason=#{refundReason},
            refundHolder=#{refundHolder},
            refundBank=#{refundBank},
            refundAccount=#{refundAccount},
            refundStatus=#{refundStatus},
            modiBy=#{modiBy},
            modiRole=#{modiRole}
        WHERE merchantUid=#{merchantUid}
    </update>
    <update id="updateRefundApproveInfo">
        UPDATE Payment
        SET
            cancelAmount=#{cancelAmount},
            refundStatus=#{refundStatus},
            modiBy=#{modiBy},
            modiRole=#{modiRole}
        WHERE merchantUid=#{merchantUid}
    </update>
    <select id="findMerchantUidByRefundStatus" resultType="String">
        SELECT p.merchantUid
        FROM Payment p left join Reservations r on strcmp(r.merchantUid, p.merchantUid) = 0
        WHERE r.reservationIdx=#{reservationIdx} and p.refundStatus=#{refundStatus}
    </select>
    <select id = "findAllRefunds" resultType="GetRefundsRes">
        SELECT p.merchantUid, p.refundReason, u.userName, u.userPhoneNumber, p.refundStatus,
               date_format(r.reservationTime,"%Y-%m-%d %H:%i") as reservationTime, r.selectedHall, r.useTime, r.personCount,
               (case
                   when r.createdAt is null then 0
                   else 1
               end) as isPaid,
               (case
                   when r.reservePrice is null then 0
                   else r.reservePrice
               end) as amount
        FROM Payment p left join Users u on p.userIdx = u.userIdx left join Reservations r on r.merchantUid = p.merchantUid
        WHERE p.storeIdx = #{storeIdx} and refundStatus = 1
        ORDER BY r.reservationTime
    </select>
</mapper>