<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.naturemobility.seoul.mapper.UsersMapper">

    <sql id="insertUser">
        userNickname
        ,userName,userPassword,userEmail
    </sql>

    <insert id="save" useGeneratedKeys="true" keyProperty="userIdx" parameterType="UserInfo">
        INSERT INTO Users(userNickname, userName, userPassword, userEmail, userImage, userPhoneNumber)
        VALUES (#{userNickname}, #{userName}, #{userPassword}, #{userEmail}, #{userImage},
                #{userPhoneNumber}) ON DUPLICATE KEY
        UPDATE
            userNickname = #{userNickname},
            userName = #{userName},
            userPassword = #{userPassword},
            userStatus = #{userStatus},
            userPoint = #{userPoint},
            userEmail = #{userEmail},
            userImage = #{userImage},
            userPhoneNumber = #{userPhoneNumber}
    </insert>

    <update id="update" parameterType="UserInfo">
        UPDATE Users
        SET userNickname = #{userNickname},
            userName     = #{userName},
            userPassword = #{userPassword},
            userStatus   = #{userStatus},
            userPoint    = #{userPoint},
            userEmail    = #{userEmail},
            userImage    = #{userImage}
        WHERE userIdx = #{userIdx}
    </update>

    <select id="findByIdx" resultType="UserInfo">
        SELECT *
        FROM Users
        WHERE userIdx = #{userIdx}
    </select>

    <select id="findByEmail" resultType="UserInfo">
        SELECT *
        FROM Users
        WHERE userEmail = #{email}
    </select>

    <delete id="delete" parameterType="UserInfo">
        DELETE
        FROM Users
        WHERE userIdx = #{userIdx}
    </delete>

    <select id="findByStatus" resultType="UserInfo">
        SELECT *
        FROM Users
        WHERE userStatus = #{status}
    </select>

    <select id="findByEmailAndStatus" resultType="UserInfo">
        SELECT *
        FROM Users
        WHERE userStatus = #{status}
          And userEmail = #{email}
    </select>

    <select id="findByStatusAndNicknameIsContaining" resultType="UserInfo">
        SELECT *
        FROM Users
        WHERE userStatus = #{status}
          And userNickname LIKE CONCAT('%', #{word}, '%')
    </select>

    <select id="cntCoupon" resultType="Integer">
        SELECT count(*) as cntCoupon
        FROM UserCoupons
                 INNER JOIN Coupons ON Coupons.couponIdx = UserCoupons.couponIdx
                 INNER JOIN Stores ON Coupons.storeIdx = Stores.storeIdx
        WHERE userIdx = 1 and couponDeadline > now() and UserCoupons.couponStatus = 0;
    </select>

    <select id="cntStoreLike" resultType="Integer">
        SELECT count(*) as cntLikeStore
        FROM  Visited
        WHERE userIdx = #{userIdx}
    </select>

    <select id="cntReservation" resultType="Integer">
        SELECT count(*) as cntReservation
        FROM Users as u
                 LEFT JOIN Reservations as r ON u.userIdx = r.userIdx
        WHERE u.userIdx = #{userIdx}
          AND r.userIdx = #{userIdx}
        GROUP BY u.userIdx;
    </select>

    <update id="updateUserPoint">
        UPDATE Users
        SET userPoint = userPoint + #{userPoint}
        WHERE userIdx = #{userIdx}
    </update>

    <select id="getUserCoupons" resultType="GetCouponByUserIdx">
        SELECT uc.couponIdx, uc.couponStatus as isUsable
        FROM UserCoupons uc
        WHERE uc.userIdx = #{userIdx}
          AND uc.couponStatus = 0
    </select>

    <insert id="postCoupon" parameterType="PostUserCoupon">
        INSERT INTO UserCoupons (userIdx, couponIdx)
        VALUES (#{userIdx}, #{couponIdx});
    </insert>

    <update id="updateUserCoupon">
        UPDATE UserCoupons
        SET couponStatus = #{couponStatus}
        WHERE couponIdx = #{couponIdx}
          and userIdx = #{userIdx}
    </update>

    <select id="getUserCouponsList" resultType="GetUserCoupon">
        SELECT UserCoupons.couponIdx, couponName, couponPercentage,
		        storeName, date_format(couponDeadline,"%Y-%m-%d") as couponDeadline,
                 ( case
                    when UserCoupons.couponStatus = 0 and couponDeadline > now() then 0
                    else 1
                    end
                )as couponStatus
        FROM UserCoupons
                 INNER JOIN Coupons ON Coupons.couponIdx = UserCoupons.couponIdx
                 INNER JOIN Stores ON Coupons.storeIdx = Stores.storeIdx
        WHERE userIdx = #{userIdx};
    </select>

    <select id="postCouponCheck" resultType="Integer">
        SELECT COUNT(1) AS couponCheck
        FROM UserCoupons
        WHERE userIdx = #{userIdx}
          AND couponIdx = #{couponIdx};
    </select>
</mapper>