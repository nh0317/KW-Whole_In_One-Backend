<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.naturemobility.seoul.mapper.ReservationMapper">

    <select id="findAllByUserIdx" parameterType="ReservationInfo" resultType="ReservationInfo">
        select r.reservationIdx,
               r.storeIdx,
               s.storeName,
               r.reservationTime,
               r.useTime,
               r.selectedHall,
               r.personCount,
               r.alreadyUsed,
               p.refundStatus
        FROM Reservations r left join Payment p  on strcmp(r.merchantUid, p.merchantUid) = 0
            left join Stores s on r.storeIdx=s.storeIdx
        WHERE r.userIdx=#{userIdx}
        Order By alreadyUsed, refundStatus, reservationTime DESC
            LIMIT #{pageInfo.firstIndex}, #{recordsPerPage}
    </select>

    <select id="findByRezIdx" resultType="ReservationInfo">
        select r.reservationIdx,
               s.storeName,
               r.reservationTIme,
               p.createdAt as paymentTime,
               r.useTime,
               r.selectedHall,
               r.personCount,
               r.alreadyUsed,
               r.reservePrice,
               r.discountPrice,
               r.payPrice,
               r.createdAt,
               p.payMethod,
               p.refundStatus
        FROM Reservations r left join Payment p on strcmp(r.merchantUid, p.merchantUid) = 0
            left join Stores s on r.storeIdx=s.storeIdx
        WHERE r.reservationIdx=#{reservationIdx}
    </select>

    <select id="cntTotal" resultType="Integer">
        select count(*)
        FROM Reservations
        WHERE userIdx=#{userIdx}
    </select>

    <select id="findStoreIdxByRezIdx" resultType="Long">
        SELECT storeIdx
        FROM Reservations
        WHERE reservationIdx=#{reservationIdx}
    </select>

    <delete id="delete" parameterType="ReservationInfo">
        DELETE FROM Reservations
        WHERE reservationIdx=#{reservationIdx}
    </delete>

    <insert id="postReservation" parameterType="PostRezInfo">
        INSERT INTO Reservations(storeIdx, userIdx, reservationTime, useTime, numberOfGame, selectedHall, request,
                                 personCount, reservePrice, discountPrice, payPrice, endTime, roomIdx, merchantUid,
                                 modiBy, modiRole)
        VALUES (#{storeIdx}, #{userIdx}, #{reservationTime}, #{useTime}, #{numberOfGame}, #{selectedHall}, #{request},
                #{personCount}, #{price}, #{discountPrice}, #{payPrice}, #{endTime}, #{roomIdx}, #{merchantUid},
                #{modiBy},#{modiRole});
    </insert>

    <select id="getReservationTime" resultType="GetRezTime">
        SELECT DATE_FORMAT(reservationTime, '%H:%i') AS reservedTime,
               DATE_FORMAT(endTime, '%H:%i') AS endTime
        FROM Reservations
        WHERE storeIdx = #{storeIdx}
          AND DATE_FORMAT(reservationTime, '%Y-%m-%d') = #{reservationDay}
          AND roomIdx = #{roomIdx}
          AND alreadyUsed = 0;
    </select>

    <select id="checkDuplication1" resultType="Integer">
        SELECT COUNT(1)
        FROM Reservations
        WHERE reservationTime >= #{startTime}
          AND reservationTime &lt;= #{endTime}
          AND storeIdx = #{storeIdx}
          AND roomIdx = #{roomIdx}
          AND alreadyUsed = 0;
    </select>

    <select id="checkDuplication2" resultType="Integer">
        SELECT COUNT(1)
        FROM Reservations
        WHERE endTime >= #{startTime}
          AND endTime &lt;= #{endTime}
          AND storeIdx = #{storeIdx}
          AND roomIdx = #{roomIdx}
          AND alreadyUsed = 0;
    </select>

    <update id="updateAlreadyUsed">
        UPDATE Reservations
        SET alreadyUsed=#{alreadyUsed}
        WHERE merchantUid=#{merchantUid}
    </update>
    
</mapper>